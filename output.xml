<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2.1 (Python 3.7.7 on win32)" generated="20200623 15:29:30.561" rpa="false">
<suite id="s1" name="TestCases" source="C:\Users\LaythAF\PycharmProjects\ApiTesting\TestCases">
<suite id="s1-s1" name="TC1 GET Base Url" source="C:\Users\LaythAF\PycharmProjects\ApiTesting\TestCases\TC1_GET_Base_Url.robot">
<test id="s1-s1-t1" name="Get_base_url">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>baseSession</arg>
<arg>${base_url}</arg>
</arguments>
<msg timestamp="20200623 15:29:30.737" level="INFO">Creating Session using : alias=baseSession, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200623 15:29:30.736" endtime="20200623 15:29:30.737"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>baseSession</arg>
<arg>/${api_url}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200623 15:29:30.749" level="INFO">GET Request : url=http://localhost:8080/CloudService/api 
 path_url=/CloudService/api 
 headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20200623 15:29:30.749" level="INFO">GET Response : url=http://localhost:8080/CloudService/api 
 status=200, reason= 
 body=Welcome to the cloud service api 
 </msg>
<msg timestamp="20200623 15:29:30.750" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200623 15:29:30.738" endtime="20200623 15:29:30.750"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<assign>
<var>${status_code}</var>
</assign>
<msg timestamp="20200623 15:29:30.751" level="INFO">${status_code} = 200</msg>
<status status="PASS" starttime="20200623 15:29:30.751" endtime="20200623 15:29:30.751"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${status_code}</arg>
</arguments>
<assign>
<var>${status_code}</var>
</assign>
<msg timestamp="20200623 15:29:30.755" level="INFO">${status_code} = 200</msg>
<status status="PASS" starttime="20200623 15:29:30.755" endtime="20200623 15:29:30.755"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${status_code}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" starttime="20200623 15:29:30.755" endtime="20200623 15:29:30.756"></status>
</kw>
<status status="PASS" starttime="20200623 15:29:30.736" endtime="20200623 15:29:30.756" critical="yes"></status>
</test>
<status status="PASS" starttime="20200623 15:29:30.594" endtime="20200623 15:29:30.758"></status>
</suite>
<suite id="s1-s2" name="TC2 Invalid Input1" source="C:\Users\LaythAF\PycharmProjects\ApiTesting\TestCases\TC2_Invalid_Input1.robot">
<test id="s1-s2-t1" name="Get_base_url">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>baseSession</arg>
<arg>${base_url}</arg>
</arguments>
<msg timestamp="20200623 15:29:30.764" level="INFO">Creating Session using : alias=baseSession, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200623 15:29:30.764" endtime="20200623 15:29:30.764"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>baseSession</arg>
<arg>/${api_url}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200623 15:29:30.772" level="INFO">GET Request : url=http://localhost:8080/CloudService/api/servers/allocate?size=150 
 path_url=/CloudService/api/servers/allocate?size=150 
 headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20200623 15:29:30.772" level="INFO">GET Response : url=http://localhost:8080/CloudService/api/servers/allocate?size=150 
 status=200, reason= 
 body=Maximum server size is 100 Giga 
 </msg>
<msg timestamp="20200623 15:29:30.772" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200623 15:29:30.765" endtime="20200623 15:29:30.772"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200623 15:29:30.773" level="INFO">${body} = Maximum server size is 100 Giga</msg>
<status status="PASS" starttime="20200623 15:29:30.773" endtime="20200623 15:29:30.773"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200623 15:29:30.774" level="INFO">${body} = Maximum server size is 100 Giga</msg>
<status status="PASS" starttime="20200623 15:29:30.774" endtime="20200623 15:29:30.774"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>Maximum server size is 100 Giga</arg>
</arguments>
<assign>
<var>${Invalid_Response}</var>
</assign>
<msg timestamp="20200623 15:29:30.775" level="INFO">${Invalid_Response} = Maximum server size is 100 Giga</msg>
<status status="PASS" starttime="20200623 15:29:30.775" endtime="20200623 15:29:30.775"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${body}</arg>
<arg>${Invalid_Response}</arg>
</arguments>
<status status="PASS" starttime="20200623 15:29:30.776" endtime="20200623 15:29:30.776"></status>
</kw>
<status status="PASS" starttime="20200623 15:29:30.763" endtime="20200623 15:29:30.777" critical="yes"></status>
</test>
<status status="PASS" starttime="20200623 15:29:30.759" endtime="20200623 15:29:30.778"></status>
</suite>
<suite id="s1-s3" name="TC3 Invalid Input2" source="C:\Users\LaythAF\PycharmProjects\ApiTesting\TestCases\TC3_Invalid_Input2.robot">
<test id="s1-s3-t1" name="Get_base_url">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>baseSession</arg>
<arg>${base_url}</arg>
</arguments>
<msg timestamp="20200623 15:29:30.785" level="INFO">Creating Session using : alias=baseSession, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200623 15:29:30.784" endtime="20200623 15:29:30.785"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>baseSession</arg>
<arg>/${api_url}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200623 15:29:30.791" level="INFO">GET Request : url=http://localhost:8080/CloudService/api/servers/allocate?size=0 
 path_url=/CloudService/api/servers/allocate?size=0 
 headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20200623 15:29:30.791" level="INFO">GET Response : url=http://localhost:8080/CloudService/api/servers/allocate?size=0 
 status=200, reason= 
 body=Minimum server size is 1 Giga 
 </msg>
<msg timestamp="20200623 15:29:30.792" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200623 15:29:30.786" endtime="20200623 15:29:30.792"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200623 15:29:30.793" level="INFO">${body} = Minimum server size is 1 Giga</msg>
<status status="PASS" starttime="20200623 15:29:30.793" endtime="20200623 15:29:30.793"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200623 15:29:30.794" level="INFO">${body} = Minimum server size is 1 Giga</msg>
<status status="PASS" starttime="20200623 15:29:30.793" endtime="20200623 15:29:30.794"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>Minimum server size is 1 Giga</arg>
</arguments>
<assign>
<var>${Invalid_Response}</var>
</assign>
<msg timestamp="20200623 15:29:30.794" level="INFO">${Invalid_Response} = Minimum server size is 1 Giga</msg>
<status status="PASS" starttime="20200623 15:29:30.794" endtime="20200623 15:29:30.794"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${body}</arg>
<arg>${Invalid_Response}</arg>
</arguments>
<status status="PASS" starttime="20200623 15:29:30.795" endtime="20200623 15:29:30.795"></status>
</kw>
<status status="PASS" starttime="20200623 15:29:30.784" endtime="20200623 15:29:30.796" critical="yes"></status>
</test>
<status status="PASS" starttime="20200623 15:29:30.780" endtime="20200623 15:29:30.797"></status>
</suite>
<suite id="s1-s4" name="TC4 Case 1" source="C:\Users\LaythAF\PycharmProjects\ApiTesting\TestCases\TC4_Case_1.robot">
<test id="s1-s4-t1" name="Get_base_url">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>baseSession</arg>
<arg>${base_url}</arg>
</arguments>
<msg timestamp="20200623 15:29:30.958" level="INFO">Creating Session using : alias=baseSession, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200623 15:29:30.957" endtime="20200623 15:29:30.958"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>baseSession</arg>
<arg>/${api_url}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200623 15:29:31.463" level="INFO">GET Request : url=http://localhost:8080/CloudService/api/servers 
 path_url=/CloudService/api/servers 
 headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20200623 15:29:31.464" level="INFO">GET Response : url=http://localhost:8080/CloudService/api/servers 
 status=200, reason= 
 body=[{"serverId":1,"allocatedSize":100,"freeSize":0,"creationDate":"Tue Jun 23 15:19:55 IDT 2020","active":true}] 
 </msg>
<msg timestamp="20200623 15:29:31.464" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200623 15:29:30.958" endtime="20200623 15:29:31.464"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_body}</var>
</assign>
<msg timestamp="20200623 15:29:31.465" level="INFO">To JSON using : content=[{"serverId":1,"allocatedSize":100,"freeSize":0,"creationDate":"Tue Jun 23 15:19:55 IDT 2020","active":true}] </msg>
<msg timestamp="20200623 15:29:31.465" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20200623 15:29:31.465" level="INFO">${json_body} = [{'serverId': 1, 'allocatedSize': 100, 'freeSize': 0, 'creationDate': 'Tue Jun 23 15:19:55 IDT 2020', 'active': True}]</msg>
<status status="PASS" starttime="20200623 15:29:31.464" endtime="20200623 15:29:31.465"></status>
</kw>
<kw name="Convert To List" library="Collections">
<doc>Converts the given ``item`` to a Python ``list`` type.</doc>
<arguments>
<arg>${json_body}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20200623 15:29:31.466" level="INFO">${list} = [{'serverId': 1, 'allocatedSize': 100, 'freeSize': 0, 'creationDate': 'Tue Jun 23 15:19:55 IDT 2020', 'active': True}]</msg>
<status status="PASS" starttime="20200623 15:29:31.465" endtime="20200623 15:29:31.466"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${list}</arg>
</arguments>
<assign>
<var>${countBefore}</var>
</assign>
<msg timestamp="20200623 15:29:31.467" level="INFO">Length is 1</msg>
<msg timestamp="20200623 15:29:31.467" level="INFO">${countBefore} = 1</msg>
<status status="PASS" starttime="20200623 15:29:31.466" endtime="20200623 15:29:31.467"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>baseSession</arg>
<arg>/${api_url}/allocate?size=60</arg>
</arguments>
<msg timestamp="20200623 15:29:31.926" level="INFO">GET Request : url=http://localhost:8080/CloudService/api/servers/allocate?size=60 
 path_url=/CloudService/api/servers/allocate?size=60 
 headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20200623 15:29:31.926" level="INFO">GET Response : url=http://localhost:8080/CloudService/api/servers/allocate?size=60 
 status=200, reason= 
 body=A server with size: 60 was allocated 
 </msg>
<status status="PASS" starttime="20200623 15:29:31.467" endtime="20200623 15:29:31.926"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>baseSession</arg>
<arg>/${api_url}/allocate?size=60</arg>
</arguments>
<msg timestamp="20200623 15:29:32.555" level="INFO">GET Request : url=http://localhost:8080/CloudService/api/servers/allocate?size=60 
 path_url=/CloudService/api/servers/allocate?size=60 
 headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20200623 15:29:32.555" level="INFO">GET Response : url=http://localhost:8080/CloudService/api/servers/allocate?size=60 
 status=200, reason= 
 body=A server with size: 60 was allocated 
 </msg>
<status status="PASS" starttime="20200623 15:29:31.927" endtime="20200623 15:29:32.555"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>baseSession</arg>
<arg>/${api_url}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200623 15:29:33.958" level="INFO">GET Request : url=http://localhost:8080/CloudService/api/servers 
 path_url=/CloudService/api/servers 
 headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20200623 15:29:33.958" level="INFO">GET Response : url=http://localhost:8080/CloudService/api/servers 
 status=200, reason= 
 body=[{"serverId":1,"allocatedSize":100,"freeSize":0,"creationDate":"Tue Jun 23 15:19:55 IDT 2020","active":true},{"serverId":2,"allocatedSize":0,"freeSize":100,"creationDate":"Tue Jun 23 15:29:31 IDT 2020","active":false},{"serverId":3,"allocatedSize":0,"freeSize":100,"creationDate":"Tue Jun 23 15:29:32 IDT 2020","active":false}] 
 </msg>
<msg timestamp="20200623 15:29:33.958" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200623 15:29:32.556" endtime="20200623 15:29:33.958"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_body}</var>
</assign>
<msg timestamp="20200623 15:29:33.959" level="INFO">To JSON using : content=[{"serverId":1,"allocatedSize":100,"freeSize":0,"creationDate":"Tue Jun 23 15:19:55 IDT 2020","active":true},{"serverId":2,"allocatedSize":0,"freeSize":100,"creationDate":"Tue Jun 23 15:29:31 IDT 2020","active":false},{"serverId":3,"allocatedSize":0,"freeSize":100,"creationDate":"Tue Jun 23 15:29:32 IDT 2020","active":false}] </msg>
<msg timestamp="20200623 15:29:33.959" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20200623 15:29:33.959" level="INFO">${json_body} = [{'serverId': 1, 'allocatedSize': 100, 'freeSize': 0, 'creationDate': 'Tue Jun 23 15:19:55 IDT 2020', 'active': True}, {'serverId': 2, 'allocatedSize': 0, 'freeSize': 100, 'creationDate': 'Tue Jun 23 ...</msg>
<status status="PASS" starttime="20200623 15:29:33.959" endtime="20200623 15:29:33.960"></status>
</kw>
<kw name="Convert To List" library="Collections">
<doc>Converts the given ``item`` to a Python ``list`` type.</doc>
<arguments>
<arg>${json_body}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20200623 15:29:33.961" level="INFO">${list} = [{'serverId': 1, 'allocatedSize': 100, 'freeSize': 0, 'creationDate': 'Tue Jun 23 15:19:55 IDT 2020', 'active': True}, {'serverId': 2, 'allocatedSize': 0, 'freeSize': 100, 'creationDate': 'Tue Jun 23 ...</msg>
<status status="PASS" starttime="20200623 15:29:33.960" endtime="20200623 15:29:33.961"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${list}</arg>
</arguments>
<assign>
<var>${countAfter}</var>
</assign>
<msg timestamp="20200623 15:29:33.961" level="INFO">Length is 3</msg>
<msg timestamp="20200623 15:29:33.961" level="INFO">${countAfter} = 3</msg>
<status status="PASS" starttime="20200623 15:29:33.961" endtime="20200623 15:29:33.961"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${countAfter}</arg>
</arguments>
<assign>
<var>${countAfter}</var>
</assign>
<msg timestamp="20200623 15:29:33.962" level="INFO">${countAfter} = 3</msg>
<status status="PASS" starttime="20200623 15:29:33.962" endtime="20200623 15:29:33.962"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${countBefore}</arg>
</arguments>
<assign>
<var>${countBefore}</var>
</assign>
<msg timestamp="20200623 15:29:33.963" level="INFO">${countBefore} = 1</msg>
<status status="PASS" starttime="20200623 15:29:33.963" endtime="20200623 15:29:33.963"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>${countAfter} - ${countBefore}</arg>
</arguments>
<assign>
<var>${countOfCreatedServers}</var>
</assign>
<msg timestamp="20200623 15:29:33.964" level="INFO">${countOfCreatedServers} = 2</msg>
<status status="PASS" starttime="20200623 15:29:33.964" endtime="20200623 15:29:33.964"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${countOfCreatedServers}</arg>
</arguments>
<assign>
<var>${countOfCreatedServers}</var>
</assign>
<msg timestamp="20200623 15:29:33.965" level="INFO">${countOfCreatedServers} = 2</msg>
<status status="PASS" starttime="20200623 15:29:33.965" endtime="20200623 15:29:33.965"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${countOfCreatedServers}</arg>
<arg>2</arg>
</arguments>
<status status="PASS" starttime="20200623 15:29:33.966" endtime="20200623 15:29:33.966"></status>
</kw>
<status status="PASS" starttime="20200623 15:29:30.957" endtime="20200623 15:29:33.966" critical="yes"></status>
</test>
<status status="PASS" starttime="20200623 15:29:30.799" endtime="20200623 15:29:33.968"></status>
</suite>
<suite id="s1-s5" name="TC5 Case 2" source="C:\Users\LaythAF\PycharmProjects\ApiTesting\TestCases\TC5_Case_2.robot">
<test id="s1-s5-t1" name="Get_base_url">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>baseSession</arg>
<arg>${base_url}</arg>
</arguments>
<msg timestamp="20200623 15:29:33.980" level="INFO">Creating Session using : alias=baseSession, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200623 15:29:33.980" endtime="20200623 15:29:33.980"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>baseSession</arg>
<arg>/${api_url}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200623 15:29:35.295" level="INFO">GET Request : url=http://localhost:8080/CloudService/api/servers 
 path_url=/CloudService/api/servers 
 headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20200623 15:29:35.295" level="INFO">GET Response : url=http://localhost:8080/CloudService/api/servers 
 status=200, reason= 
 body=[{"serverId":1,"allocatedSize":100,"freeSize":0,"creationDate":"Tue Jun 23 15:19:55 IDT 2020","active":true},{"serverId":2,"allocatedSize":0,"freeSize":100,"creationDate":"Tue Jun 23 15:29:31 IDT 2020","active":false},{"serverId":3,"allocatedSize":0,"freeSize":100,"creationDate":"Tue Jun 23 15:29:32 IDT 2020","active":false}] 
 </msg>
<msg timestamp="20200623 15:29:35.295" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200623 15:29:33.981" endtime="20200623 15:29:35.295"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_body}</var>
</assign>
<msg timestamp="20200623 15:29:35.296" level="INFO">To JSON using : content=[{"serverId":1,"allocatedSize":100,"freeSize":0,"creationDate":"Tue Jun 23 15:19:55 IDT 2020","active":true},{"serverId":2,"allocatedSize":0,"freeSize":100,"creationDate":"Tue Jun 23 15:29:31 IDT 2020","active":false},{"serverId":3,"allocatedSize":0,"freeSize":100,"creationDate":"Tue Jun 23 15:29:32 IDT 2020","active":false}] </msg>
<msg timestamp="20200623 15:29:35.297" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20200623 15:29:35.297" level="INFO">${json_body} = [{'serverId': 1, 'allocatedSize': 100, 'freeSize': 0, 'creationDate': 'Tue Jun 23 15:19:55 IDT 2020', 'active': True}, {'serverId': 2, 'allocatedSize': 0, 'freeSize': 100, 'creationDate': 'Tue Jun 23 ...</msg>
<status status="PASS" starttime="20200623 15:29:35.296" endtime="20200623 15:29:35.297"></status>
</kw>
<kw name="Convert To List" library="Collections">
<doc>Converts the given ``item`` to a Python ``list`` type.</doc>
<arguments>
<arg>${json_body}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20200623 15:29:35.297" level="INFO">${list} = [{'serverId': 1, 'allocatedSize': 100, 'freeSize': 0, 'creationDate': 'Tue Jun 23 15:19:55 IDT 2020', 'active': True}, {'serverId': 2, 'allocatedSize': 0, 'freeSize': 100, 'creationDate': 'Tue Jun 23 ...</msg>
<status status="PASS" starttime="20200623 15:29:35.297" endtime="20200623 15:29:35.298"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${list}</arg>
</arguments>
<assign>
<var>${countBefore}</var>
</assign>
<msg timestamp="20200623 15:29:35.298" level="INFO">Length is 3</msg>
<msg timestamp="20200623 15:29:35.299" level="INFO">${countBefore} = 3</msg>
<status status="PASS" starttime="20200623 15:29:35.298" endtime="20200623 15:29:35.299"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>baseSession</arg>
<arg>/${api_url}/allocate?size=50</arg>
</arguments>
<msg timestamp="20200623 15:29:36.641" level="INFO">GET Request : url=http://localhost:8080/CloudService/api/servers/allocate?size=50 
 path_url=/CloudService/api/servers/allocate?size=50 
 headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20200623 15:29:36.641" level="INFO">GET Response : url=http://localhost:8080/CloudService/api/servers/allocate?size=50 
 status=200, reason= 
 body=A server with size: 50 was allocated 
 </msg>
<status status="PASS" starttime="20200623 15:29:35.299" endtime="20200623 15:29:36.641"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>baseSession</arg>
<arg>/${api_url}/allocate?size=50</arg>
</arguments>
<msg timestamp="20200623 15:29:38.251" level="INFO">GET Request : url=http://localhost:8080/CloudService/api/servers/allocate?size=50 
 path_url=/CloudService/api/servers/allocate?size=50 
 headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20200623 15:29:38.251" level="INFO">GET Response : url=http://localhost:8080/CloudService/api/servers/allocate?size=50 
 status=200, reason= 
 body=A server with size: 50 was allocated 
 </msg>
<status status="PASS" starttime="20200623 15:29:36.642" endtime="20200623 15:29:38.251"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>baseSession</arg>
<arg>/${api_url}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200623 15:29:39.773" level="INFO">GET Request : url=http://localhost:8080/CloudService/api/servers 
 path_url=/CloudService/api/servers 
 headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20200623 15:29:39.773" level="INFO">GET Response : url=http://localhost:8080/CloudService/api/servers 
 status=200, reason= 
 body=[{"serverId":1,"allocatedSize":100,"freeSize":0,"creationDate":"Tue Jun 23 15:19:55 IDT 2020","active":true},{"serverId":2,"allocatedSize":0,"freeSize":100,"creationDate":"Tue Jun 23 15:29:31 IDT 2020","active":false},{"serverId":3,"allocatedSize":0,"freeSize":100,"creationDate":"Tue Jun 23 15:29:32 IDT 2020","active":false},{"serverId":4,"allocatedSize":0,"freeSize":100,"creationDate":"Tue Jun 23 15:29:36 IDT 2020","active":false}] 
 </msg>
<msg timestamp="20200623 15:29:39.773" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200623 15:29:38.252" endtime="20200623 15:29:39.773"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_body}</var>
</assign>
<msg timestamp="20200623 15:29:39.775" level="INFO">To JSON using : content=[{"serverId":1,"allocatedSize":100,"freeSize":0,"creationDate":"Tue Jun 23 15:19:55 IDT 2020","active":true},{"serverId":2,"allocatedSize":0,"freeSize":100,"creationDate":"Tue Jun 23 15:29:31 IDT 2020","active":false},{"serverId":3,"allocatedSize":0,"freeSize":100,"creationDate":"Tue Jun 23 15:29:32 IDT 2020","active":false},{"serverId":4,"allocatedSize":0,"freeSize":100,"creationDate":"Tue Jun 23 15:29:36 IDT 2020","active":false}] </msg>
<msg timestamp="20200623 15:29:39.775" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20200623 15:29:39.775" level="INFO">${json_body} = [{'serverId': 1, 'allocatedSize': 100, 'freeSize': 0, 'creationDate': 'Tue Jun 23 15:19:55 IDT 2020', 'active': True}, {'serverId': 2, 'allocatedSize': 0, 'freeSize': 100, 'creationDate': 'Tue Jun 23 ...</msg>
<status status="PASS" starttime="20200623 15:29:39.774" endtime="20200623 15:29:39.775"></status>
</kw>
<kw name="Convert To List" library="Collections">
<doc>Converts the given ``item`` to a Python ``list`` type.</doc>
<arguments>
<arg>${json_body}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20200623 15:29:39.777" level="INFO">${list} = [{'serverId': 1, 'allocatedSize': 100, 'freeSize': 0, 'creationDate': 'Tue Jun 23 15:19:55 IDT 2020', 'active': True}, {'serverId': 2, 'allocatedSize': 0, 'freeSize': 100, 'creationDate': 'Tue Jun 23 ...</msg>
<status status="PASS" starttime="20200623 15:29:39.776" endtime="20200623 15:29:39.777"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${list}</arg>
</arguments>
<assign>
<var>${countAfter}</var>
</assign>
<msg timestamp="20200623 15:29:39.778" level="INFO">Length is 4</msg>
<msg timestamp="20200623 15:29:39.778" level="INFO">${countAfter} = 4</msg>
<status status="PASS" starttime="20200623 15:29:39.778" endtime="20200623 15:29:39.778"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${countAfter}</arg>
</arguments>
<assign>
<var>${countAfter}</var>
</assign>
<msg timestamp="20200623 15:29:39.782" level="INFO">${countAfter} = 4</msg>
<status status="PASS" starttime="20200623 15:29:39.781" endtime="20200623 15:29:39.782"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${countBefore}</arg>
</arguments>
<assign>
<var>${countBefore}</var>
</assign>
<msg timestamp="20200623 15:29:39.783" level="INFO">${countBefore} = 3</msg>
<status status="PASS" starttime="20200623 15:29:39.783" endtime="20200623 15:29:39.783"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>${countAfter} - ${countBefore}</arg>
</arguments>
<assign>
<var>${countOfCreatedServers}</var>
</assign>
<msg timestamp="20200623 15:29:39.784" level="INFO">${countOfCreatedServers} = 1</msg>
<status status="PASS" starttime="20200623 15:29:39.784" endtime="20200623 15:29:39.784"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${countOfCreatedServers}</arg>
</arguments>
<assign>
<var>${countOfCreatedServers}</var>
</assign>
<msg timestamp="20200623 15:29:39.786" level="INFO">${countOfCreatedServers} = 1</msg>
<status status="PASS" starttime="20200623 15:29:39.785" endtime="20200623 15:29:39.786"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${countOfCreatedServers}</arg>
<arg>1</arg>
</arguments>
<status status="PASS" starttime="20200623 15:29:39.786" endtime="20200623 15:29:39.787"></status>
</kw>
<status status="PASS" starttime="20200623 15:29:33.979" endtime="20200623 15:29:39.787" critical="yes"></status>
</test>
<status status="PASS" starttime="20200623 15:29:33.974" endtime="20200623 15:29:39.789"></status>
</suite>
<status status="PASS" starttime="20200623 15:29:30.563" endtime="20200623 15:29:39.792"></status>
</suite>
<statistics>
<total>
<stat pass="5" fail="0">Critical Tests</stat>
<stat pass="5" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="5" fail="0" id="s1" name="TestCases">TestCases</stat>
<stat pass="1" fail="0" id="s1-s1" name="TC1 GET Base Url">TestCases.TC1 GET Base Url</stat>
<stat pass="1" fail="0" id="s1-s2" name="TC2 Invalid Input1">TestCases.TC2 Invalid Input1</stat>
<stat pass="1" fail="0" id="s1-s3" name="TC3 Invalid Input2">TestCases.TC3 Invalid Input2</stat>
<stat pass="1" fail="0" id="s1-s4" name="TC4 Case 1">TestCases.TC4 Case 1</stat>
<stat pass="1" fail="0" id="s1-s5" name="TC5 Case 2">TestCases.TC5 Case 2</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
